// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?   // 添加密码字段用于传统认证
    role          String    @default("user") // 用户角色：user, admin
    gender        String?   // 性别：male, female
    registrationIp String?  // 注册IP地址
    lastOnlineAt  DateTime? // 最后在线时间
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @default(now()) @updatedAt
    accounts      Account[]
    sessions      Session[]
    ziweiCharts   ZiweiChart[] // 紫微排盘记录
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// 紫微排盘记录表
model ZiweiChart {
    id        String   @id @default(cuid())
    userId    String
    name      String?  // 排盘对象姓名
    gender    String   // 性别：male, female
    birthDate DateTime // 出生日期
    birthTime String   // 出生时间
    location  String?  // 出生地点
    chartData Json     // 排盘结果数据
    createdAt DateTime @default(now())

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
    @@index([createdAt])
}
